$use <stdlib@1.0.3>
$use <fpic@1.0.4>

$include <std.fl>
$include <fpic.fl>

function tryWrite() -> void {
	int[] canvas = allocate(8 * 4 * 4);
	memory_area_set_64(canvas, 0xffffffff, 8 * 4 * 4);

	canvas[0 + 0 * 4] = 0xff0000ff;
	canvas[3 + 3 * 4] = 0xff00ff00;

	if !write_fpic(canvas, 4, 4, "test.fpic") {
		prints("Failed to write!");
		do_exit(1);
	}

	deallocate(canvas);
}

function tryRead() -> void {
	int fpic = read_fpic("test.fpic");
	if !fpic {
		prints("Failed to read!");
		return;
	}

	printi(width_fpic(fpic));
	printi(height_fpic(fpic));

	int[] c = canvas_from_fpic(fpic);
	printi(c[0 + 0 * 4]);
	printi(c[1 + 1 * 4]);
	printi(c[3 + 3 * 4]);

	deallocate(fpic);
	deallocate(c);
}


function spark(int argc, str[] argv) -> int {
	tryWrite();
	tryRead();
	return 0;
}
